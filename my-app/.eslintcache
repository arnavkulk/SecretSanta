[{"/Users/arnav/git/SecretSanta/my-app/src/index.js":"1","/Users/arnav/git/SecretSanta/my-app/src/App.js":"2","/Users/arnav/git/SecretSanta/my-app/src/components/Login.js":"3","/Users/arnav/git/SecretSanta/my-app/src/firebase.js":"4"},{"size":197,"mtime":1608097120711,"results":"5","hashOfConfig":"6"},{"size":209,"mtime":1608096552236,"results":"7","hashOfConfig":"6"},{"size":10595,"mtime":1607665180308,"results":"8","hashOfConfig":"6"},{"size":466,"mtime":1608097090344,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14xoqrd",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arnav/git/SecretSanta/my-app/src/index.js",[],"/Users/arnav/git/SecretSanta/my-app/src/App.js",[],"/Users/arnav/git/SecretSanta/my-app/src/components/Login.js",["20","21","22","23","24","25","26","27"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport firebase from \"../firebase.js\";\nimport { Container, Row, Col, Nav, Tab } from \"react-bootstrap\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Tandon-Kulkarni\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\nexport default class SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      authed: false,\n      desire: \"\",\n      creating: false,\n      drawState: \"\",\n      name: \"\",\n      userData: \"\",\n    };\n  }\n  componentDidMount() {\n    let ref = this;\n    let db = firebase.firestore();\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"hihihi\", user.email);\n        let data = null;\n        Promise.all([\n          db\n            .collection(\"users\")\n            .where(\"email\", \"==\", user.email)\n            .get()\n            .then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                if (doc.exists) {\n                  console.log(\"EXITS\");\n                  data = doc.data();\n                  console.log(\"THE USER\", user);\n                }\n              });\n            })\n            .catch(function (error) {\n              console.log(\"Error getting documents: \", error);\n            }),\n        ]).then(() => {\n          ref.setState({ authed: true });\n          ref.setState({ userData: data });\n        });\n      }\n    });\n    db.collection(\"commands\")\n      .doc(\"commandCenter\")\n      .onSnapshot(function (doc) {\n        ref.setState({ drawState: doc.data()[\"state\"] });\n        db.collection(\"users\")\n          .doc(firebase.auth().currentUser.uid)\n          .get((snap) => {\n            ref.setState({ userData: snap.data() });\n          });\n      });\n  }\n  createUser = () => {\n    this.setState({ creating: true });\n    let db = firebase.firestore();\n    let ref = this;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then((user) => {\n        db.collection(\"users\")\n          .doc(user.uid)\n          .set({\n            desire: this.state.desire,\n            name: this.state.name,\n            person: \"\",\n            personDesire: \"\",\n            email: this.state.email,\n          })\n          .then(function () {\n            ref.setState({ creating: false });\n          })\n          .catch(function (error) {\n            console.error(\"Error writing document: \", error);\n          });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // ..\n      });\n  };\n  login = () => {\n    this.setState({ creating: true });\n    let ref = this;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then((user) => {\n        ref.setState({ creating: false });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n  };\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    if (!this.state.authed || this.state.creating) {\n      return (\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          style={{ marginTop: \"200px\" }}\n        >\n          <CssBaseline />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Secret Santa\n            </Typography>\n            <Tab.Container\n              id=\"left-tabs-example\"\n              defaultActiveKey=\"first\"\n              style={{ marginTop: \"25px\" }}\n            >\n              <Row style={{ marginTop: \"35px\" }}>\n                <Col sm={3}>\n                  <Nav variant=\"pills\" className=\"flex-column\">\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"first\">Create Account</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"second\">Log In</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </Col>\n                <Col sm={9}>\n                  <Tab.Content>\n                    <Tab.Pane eventKey=\"first\">\n                      <form noValidate>\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"name\"\n                          label=\"Name\"\n                          name=\"name\"\n                          autoComplete=\"name\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"password\"\n                          label=\"Password (10+ chars)\"\n                          type=\"password\"\n                          id=\"password\"\n                          autoComplete=\"current-password\"\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"desire\"\n                          label=\"What You Want/ Do Not Want\"\n                          name=\"desire\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <Row style={{ marginTop: \"25px\" }}>\n                          <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.createUser}\n                          >\n                            {this.state.creating\n                              ? \"Creating\"\n                              : \"Create Account\"}\n                          </Button>\n                        </Row>\n                      </form>\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"second\">\n                      <form noValidate>\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"password\"\n                          label=\"Password\"\n                          type=\"password\"\n                          id=\"password\"\n                          autoComplete=\"current-password\"\n                          onChange={this.handleChange}\n                        />\n                        <Row style={{ marginTop: \"25px\" }}>\n                          <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.login}\n                          >\n                            {this.state.creating ? \"Logging In\" : \"Log In\"}\n                          </Button>\n                        </Row>\n                      </form>\n                    </Tab.Pane>\n                  </Tab.Content>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </div>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Container>\n      );\n    } else {\n      return (\n        <Container\n          className=\"justify-content-center\"\n          style={{\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            marginTop: \"300px\",\n          }}\n        >\n          <CircularProgress color=\"secondary\" />\n          {this.state.drawState == \"wait\" && (\n            <h2>The drawing has not started.</h2>\n          )}\n          {this.state.drawState == \"started\" && <h2>Pairing...</h2>}\n          {this.state.drawState == \"released\" && (\n            <>\n              <Row\n                className=\"justify-content-center\"\n                style={{ marginTop: \"20px\" }}\n              >\n                <h2>Here's who you got. Sucks to suck.</h2>\n              </Row>\n              <Row className=\"justify-content-center\">\n                <h5>Person : {this.state.userData.person}</h5>\n              </Row>\n              <Row className=\"justify-content-center\">\n                <h5>What They Want : {this.state.userData.personDesire}</h5>\n              </Row>\n            </>\n          )}\n        </Container>\n      );\n    }\n  }\n}\n",["28","29"],"/Users/arnav/git/SecretSanta/my-app/src/firebase.js",[],{"ruleId":"30","severity":1,"message":"31","line":7,"column":8,"nodeType":"32","messageId":"33","endLine":7,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":106,"column":13,"nodeType":"32","messageId":"33","endLine":106,"endColumn":22},{"ruleId":"30","severity":1,"message":"35","line":107,"column":13,"nodeType":"32","messageId":"33","endLine":107,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":121,"column":13,"nodeType":"32","messageId":"33","endLine":121,"endColumn":22},{"ruleId":"30","severity":1,"message":"35","line":122,"column":13,"nodeType":"32","messageId":"33","endLine":122,"endColumn":25},{"ruleId":"36","severity":1,"message":"37","line":291,"column":33,"nodeType":"38","messageId":"39","endLine":291,"endColumn":35},{"ruleId":"36","severity":1,"message":"37","line":294,"column":33,"nodeType":"38","messageId":"39","endLine":294,"endColumn":35},{"ruleId":"36","severity":1,"message":"37","line":295,"column":33,"nodeType":"38","messageId":"39","endLine":295,"endColumn":35},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-global-assign","no-unsafe-negation"]
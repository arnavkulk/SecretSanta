{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { updateUserInfo, getUser } from \"../scripts/db\";\nimport { useRouter } from \"next/router\";\nexport default function UpdateProfile() {\n  const nameRef = useRef(null);\n  const desireRef = useRef(null);\n  const dislikeRef = useRef(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    0: userData,\n    1: setUserData\n  } = useState({\n    name: \"\",\n    desire: \"\",\n    email: \"\",\n    dislike: \"\",\n    personDesire: \"\",\n    personDislike: \"\"\n  });\n  useEffect(() => {\n    if (currentUser) {\n      getUser(currentUser.uid).then(snap => {\n        setUserData(snap.data());\n      });\n    } else {\n      setUserData({\n        email: \"\",\n        desire: \"\",\n        personDesire: \"\",\n        dislike: \"\",\n        personDislike: \"\",\n        name: \"\",\n        userType: \"\",\n        person: \"\"\n      });\n    }\n  }, [currentUser]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      var _nameRef$current, _desireRef$current, _dislikeRef$current;\n\n      if (!currentUser) {\n        setError(\"Failed to update info\");\n        return;\n      }\n\n      setError(\"\");\n      setLoading(true);\n      const data = {\n        name: (_nameRef$current = nameRef.current) === null || _nameRef$current === void 0 ? void 0 : _nameRef$current.value,\n        desire: (_desireRef$current = desireRef.current) === null || _desireRef$current === void 0 ? void 0 : _desireRef$current.value,\n        dislike: (_dislikeRef$current = dislikeRef.current) === null || _dislikeRef$current === void 0 ? void 0 : _dislikeRef$current.value\n      };\n      await updateUserInfo(currentUser.uid, data);\n      router.push(\"/\");\n    } catch (error) {\n      if (error === \"\") setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsxs(Card.Body, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Info\"\n        }), error && /*#__PURE__*/_jsx(Alert, {\n          variant: \"danger\",\n          children: error\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Name\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: nameRef,\n              defaultValue: userData.name,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"want\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: desireRef,\n              defaultValue: userData.desire,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"dontwant\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you don't Want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: dislikeRef,\n              defaultValue: userData.dislike,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        children: \"Cancel\"\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
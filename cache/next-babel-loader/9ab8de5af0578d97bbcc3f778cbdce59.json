{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arnav/git/SecretSanta/website-with-nextjs/src/pages/login.tsx\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Link from \"next/link\";\nimport { login, googleSignIn } from \"../scripts/auth\";\nimport { useRouter } from \"next/router\";\nexport default function Login() {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    currentUser\n  } = useAuth();\n\n  if (currentUser !== null) {\n    router.push(\"/\");\n  }\n\n  async function handleSubmit(e, type) {\n    if (e) e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n\n      if (type === \"google\") {\n        await googleSignIn();\n      } else {\n        var _emailRef$current, _passwordRef$current;\n\n        await login((_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value);\n      }\n\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n\n      if (error.code === \"auth/email-already-exists\") {\n        setError(\"A user with this email already exists\");\n      } else if (error.code === \"auth/invalid-email\") {\n        setError(\"Invalid email\");\n      } else if (error.code === \"auth/wrong-password\") {\n        setError(\"Incorrect password\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setError(\"No user with this email\");\n      } else {\n        setError(\"Failed to log in\");\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => handleSubmit(e, \"email\"),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/forgot-password\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/arnav/git/SecretSanta/website-with-nextjs/src/pages/login.tsx"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","login","googleSignIn","useRouter","Login","emailRef","passwordRef","error","setError","loading","setLoading","router","currentUser","push","handleSubmit","e","type","preventDefault","current","value","console","log","code"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Link from \"next/link\";\nimport { login, googleSignIn } from \"../scripts/auth\";\nimport { useRouter } from \"next/router\";\n\nexport default function Login() {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n  const { currentUser } = useAuth();\n\n  if (currentUser !== null) {\n    router.push(\"/\");\n  }\n\n  async function handleSubmit(e: any, type: string) {\n    if (e) e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      if (type === \"google\") {\n        await googleSignIn();\n      } else {\n        await login(emailRef.current?.value, passwordRef.current?.value);\n      }\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      if (error.code === \"auth/email-already-exists\") {\n        setError(\"A user with this email already exists\");\n      } else if (error.code === \"auth/invalid-email\") {\n        setError(\"Invalid email\");\n      } else if (error.code === \"auth/wrong-password\") {\n        setError(\"Incorrect password\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setError(\"No user with this email\");\n      } else {\n        setError(\"Failed to log in\");\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={(e) => handleSubmit(e, \"email\")}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link href=\"/forgot-password\">Forgot Password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link href=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
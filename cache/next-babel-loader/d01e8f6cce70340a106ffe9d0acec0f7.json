{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Link from \"next/link\";\nimport { login, googleSignIn } from \"../scripts/auth\";\nimport { useRouter } from \"next/router\";\nexport default function Login() {\n  var emailRef = useRef(null);\n  var passwordRef = useRef(null);\n\n  var _useState = useState(\"\"),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  if (currentUser !== null) {\n    router.push(\"/\");\n  }\n\n  function handleSubmit(_x, _x2) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e, type) {\n      var _emailRef$current, _passwordRef$current;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (e) e.preventDefault();\n              _context.prev = 1;\n              setError(\"\");\n              setLoading(true);\n\n              if (!(type === \"google\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return googleSignIn();\n\n            case 7:\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return login((_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value);\n\n            case 11:\n              router.push(\"/\");\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n              if (_context.t0.code === \"auth/email-already-exists\") {\n                setError(\"A user with this email already exists\");\n              } else if (_context.t0.code === \"auth/invalid-email\") {\n                setError(\"Invalid email\");\n              } else if (_context.t0.code === \"auth/wrong-password\") {\n                setError(\"Incorrect password\");\n              } else if (_context.t0.code === \"auth/user-not-found\") {\n                setError(\"No user with this email\");\n              } else {\n                setError(\"Failed to log in\");\n              }\n\n            case 18:\n              setLoading(false);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsxs(Card.Body, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Log In\"\n        }), error && /*#__PURE__*/_jsx(Alert, {\n          variant: \"danger\",\n          children: error\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: function onSubmit(e) {\n            return handleSubmit(e, \"email\");\n          },\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Email\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Password\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Log In\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"w-100 text-center mt-3\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/forgot-password\",\n            children: \"Forgot Password?\"\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Need an account? \", /*#__PURE__*/_jsx(Link, {\n        href: \"/signup\",\n        children: \"Sign Up\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
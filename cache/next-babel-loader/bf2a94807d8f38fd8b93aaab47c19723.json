{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arnav/git/SecretSanta/website-with-nextjs/src/pages/update-profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { updateUserInfo, getUser } from \"../scripts/db\";\nimport { useRouter } from \"next/router\";\nexport default function UpdateProfile() {\n  _s();\n\n  var nameRef = useRef(null);\n  var desireRef = useRef(null);\n  var dislikeRef = useRef(null);\n\n  var _useState = useState(\"\"),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  var _useState3 = useState({\n    name: \"\",\n    desire: \"\",\n    email: \"\",\n    dislike: \"\",\n    personDesire: \"\",\n    personDislike: \"\"\n  }),\n      userData = _useState3[0],\n      setUserData = _useState3[1];\n\n  useAsync(function () {\n    return getUser(currentUser.uid);\n  }, function (user) {\n    return setUserData(user.data());\n  });\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _nameRef$current, _desireRef$current, _dislikeRef$current, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n\n              if (currentUser) {\n                _context.next = 5;\n                break;\n              }\n\n              setError(\"Failed to update info\");\n              return _context.abrupt(\"return\");\n\n            case 5:\n              setError(\"\");\n              setLoading(true);\n              data = {\n                name: (_nameRef$current = nameRef.current) === null || _nameRef$current === void 0 ? void 0 : _nameRef$current.value,\n                desire: (_desireRef$current = desireRef.current) === null || _desireRef$current === void 0 ? void 0 : _desireRef$current.value,\n                dislike: (_dislikeRef$current = dislikeRef.current) === null || _dislikeRef$current === void 0 ? void 0 : _dislikeRef$current.value\n              };\n              _context.next = 10;\n              return updateUserInfo(currentUser.uid, data);\n\n            case 10:\n              router.push(\"/\");\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              if (_context.t0 === \"\") setError(\"Failed to create an account\");\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: nameRef,\n              defaultValue: userData.name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"want\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"What you want\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: desireRef,\n              defaultValue: userData.desire,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"dontwant\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"What you don't Want\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ref: dislikeRef,\n              defaultValue: userData.dislike,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"4ISC2ddm6Iwosa1ap8qBFU0heaE=\", true, function () {\n  return [useRouter, useAuth];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/arnav/git/SecretSanta/website-with-nextjs/src/pages/update-profile.tsx"],"names":["React","useRef","useState","Form","Button","Card","Alert","Link","useAuth","updateUserInfo","getUser","useRouter","UpdateProfile","nameRef","desireRef","dislikeRef","error","setError","loading","setLoading","router","currentUser","name","desire","email","dislike","personDesire","personDislike","userData","setUserData","useAsync","uid","user","data","handleSubmit","e","preventDefault","current","value","push"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { updateUserInfo, User, getUser } from \"../scripts/db\";\nimport { useRouter } from \"next/router\";\n\nexport default function UpdateProfile() {\n  const nameRef = useRef<HTMLInputElement>(null);\n  const desireRef = useRef<HTMLInputElement>(null);\n  const dislikeRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n  const { currentUser } = useAuth();\n  const [userData, setUserData] = useState<User>({\n    name: \"\",\n    desire: \"\",\n    email: \"\",\n    dislike: \"\",\n    personDesire: \"\",\n    personDislike: \"\",\n  });\n\n  useAsync(\n    () => getUser(currentUser.uid),\n    (user: firebase.firestore.DocumentSnapshot) =>\n      setUserData(user.data() as User)\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      if (!currentUser) {\n        setError(\"Failed to update info\");\n        return;\n      }\n      setError(\"\");\n      setLoading(true);\n      const data: User = {\n        name: nameRef.current?.value,\n        desire: desireRef.current?.value,\n        dislike: dislikeRef.current?.value,\n      };\n      await updateUserInfo(currentUser.uid, data);\n      router.push(\"/\");\n    } catch (error) {\n      if (error === \"\") setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Info</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={nameRef}\n                defaultValue={userData.name}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"want\">\n              <Form.Label>What you want</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={desireRef}\n                defaultValue={userData.desire}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"dontwant\">\n              <Form.Label>What you don't Want</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={dislikeRef}\n                defaultValue={userData.dislike}\n                required\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link href=\"/\">Cancel</Link>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
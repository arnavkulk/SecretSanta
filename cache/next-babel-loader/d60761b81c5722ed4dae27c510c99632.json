{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { signup } from \"../scripts/auth\";\nimport { addUser } from \"../scripts/db\";\nimport { useRouter } from \"next/router\";\nexport default function Signup() {\n  var nameRef = useRef(null);\n  var emailRef = useRef(null);\n  var passwordRef = useRef(null);\n  var passwordConfirmRef = useRef(null);\n  var desireRef = useRef(null);\n  var dislikeRef = useRef(null);\n\n  var _useState = useState(\"\"),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _passwordRef$current, _passwordConfirmRef$c;\n\n      var _emailRef$current, _passwordRef$current2, _emailRef$current2, _nameRef$current, _desireRef$current, _dislikeRef$current, user, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(((_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value) !== ((_passwordConfirmRef$c = passwordConfirmRef.current) === null || _passwordConfirmRef$c === void 0 ? void 0 : _passwordConfirmRef$c.value))) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", setError(\"Passwords do not match\"));\n\n            case 3:\n              _context.prev = 3;\n              setError(\"\");\n              setLoading(true);\n              _context.next = 8;\n              return signup((_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current2 = passwordRef.current) === null || _passwordRef$current2 === void 0 ? void 0 : _passwordRef$current2.value);\n\n            case 8:\n              user = _context.sent;\n\n              if (user.user) {\n                _context.next = 12;\n                break;\n              }\n\n              setError(\"Failed to create an account\");\n              return _context.abrupt(\"return\");\n\n            case 12:\n              data = {\n                email: (_emailRef$current2 = emailRef.current) === null || _emailRef$current2 === void 0 ? void 0 : _emailRef$current2.value,\n                name: (_nameRef$current = nameRef.current) === null || _nameRef$current === void 0 ? void 0 : _nameRef$current.value,\n                desire: (_desireRef$current = desireRef.current) === null || _desireRef$current === void 0 ? void 0 : _desireRef$current.value,\n                dislike: (_dislikeRef$current = dislikeRef.current) === null || _dislikeRef$current === void 0 ? void 0 : _dislikeRef$current.value,\n                userType: \"user\",\n                personDesire: \"\",\n                personDislike: \"\",\n                person: \"\"\n              };\n              _context.next = 15;\n              return addUser(user.user.uid, data);\n\n            case 15:\n              router.push(\"/\");\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n\n              if (_context.t0.code === \"auth/email-already-in-use\") {\n                setError(\"A user with this email already exists\");\n              } else if (_context.t0.code === \"auth/invalid-email\") {\n                setError(\"Invalid email\");\n              } else if (_context.t0.code === \"auth/weak-password\") {\n                setError(\"Password must be at least 6 characters\");\n              } else if (_context.t0.code === \"auth/user-not-found\") {\n                setError(\"No user with this email\");\n              } else {\n                setError(\"Failed to create account\");\n              }\n\n            case 21:\n              setLoading(false);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsxs(Card.Body, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Sign Up\"\n        }), error && /*#__PURE__*/_jsx(Alert, {\n          variant: \"danger\",\n          children: error\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Name\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: nameRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Email\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Password\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Password Confirmation\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"want\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: desireRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"dontwant\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you don't Want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: dislikeRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsx(Link, {\n        href: \"/login\",\n        children: \"Log In\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
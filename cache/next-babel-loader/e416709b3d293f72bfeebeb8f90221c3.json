{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arnav/git/SecretSanta/website-with-nextjs/src/contexts/AuthContext.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase\";\nconst AuthContext = /*#__PURE__*/createContext({\n  currentUser: null\n});\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  let value = {\n    currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: [\" \", !loading && children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/arnav/git/SecretSanta/website-with-nextjs/src/contexts/AuthContext.tsx"],"names":["React","createContext","useContext","useEffect","useState","auth","AuthContext","currentUser","useAuth","AuthProvider","children","setCurrentUser","loading","setLoading","unsubscribe","onAuthStateChanged","user","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,IAAT,QAAqB,gBAArB;AAOA,MAAMC,WAAW,gBAAGL,aAAa,CAAQ;AAAEM,EAAAA,WAAW,EAAE;AAAf,CAAR,CAAjC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAa;AAClC,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD,CAFM;AAIP,OAAO,MAAMG,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM;AAAA,OAACH,WAAD;AAAA,OAAcI;AAAd,MAAgCP,QAAQ,CAAuB,IAAvB,CAA9C;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,WAAW,GAAGT,IAAI,CAACU,kBAAL,CAAyBC,IAAD,IAAU;AAClDL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHiB,CAAlB;AAIA,WAAOC,WAAP;AACD,GANQ,EAMN,EANM,CAAT;AAOA,MAAIG,KAAY,GAAG;AACjBV,IAAAA;AADiB,GAAnB;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,KAA7B;AAAA,eACG,GADH,EAEG,CAACL,OAAD,IAAYF,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApBM","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport firebase from \"firebase\";\n\ninterface State {\n  currentUser: firebase.User | null;\n}\n\nconst AuthContext = createContext<State>({ currentUser: null });\n\nexport const useAuth = (): State => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  let value: State = {\n    currentUser,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {\" \"}\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
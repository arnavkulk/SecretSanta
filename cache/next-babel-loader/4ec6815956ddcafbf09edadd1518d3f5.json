{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Link from \"next/link\";\nimport { login, googleSignIn } from \"../scripts/auth\";\nimport { useRouter } from \"next/router\";\nexport default function Login() {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const {\n    currentUser\n  } = useAuth();\n\n  if (currentUser !== null) {\n    router.push(\"/\");\n  }\n\n  async function handleSubmit(e, type) {\n    if (e) e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n\n      if (type === \"google\") {\n        await googleSignIn();\n      } else {\n        var _emailRef$current, _passwordRef$current;\n\n        await login((_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value);\n      }\n\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n\n      if (error.code === \"auth/email-already-exists\") {\n        setError(\"A user with this email already exists\");\n      } else if (error.code === \"auth/invalid-email\") {\n        setError(\"Invalid email\");\n      } else if (error.code === \"auth/wrong-password\") {\n        setError(\"Incorrect password\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setError(\"No user with this email\");\n      } else {\n        setError(\"Failed to log in\");\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsxs(Card.Body, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Log In\"\n        }), error && /*#__PURE__*/_jsx(Alert, {\n          variant: \"danger\",\n          children: error\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: e => handleSubmit(e, \"email\"),\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Email\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Password\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Log In\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"w-100 text-center mt-3\",\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/forgot-password\",\n            children: \"Forgot Password?\"\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Need an account? \", /*#__PURE__*/_jsx(Link, {\n        href: \"/signup\",\n        children: \"Sign Up\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { db } from \"../firebase\";\nexport function addUser(id, info) {\n  return db.collection(\"users\").doc(id).set(info);\n}\nexport function updateUserInfo(id, info) {\n  return db.collection(\"users\").doc(id).update(info);\n}\nexport function getUser(id) {\n  return db.collection(\"users\").doc(id).get();\n}\nexport function addListener(path, onSnapshot) {\n  return db.doc(path).onSnapshot(onSnapshot);\n}\nexport function startDrawing() {\n  return db.collection(\"commands\").doc(\"commandCenter\").update({\n    state: \"started\"\n  });\n}\nexport function resetDrawing() {\n  return _resetDrawing.apply(this, arguments);\n}\n\nfunction _resetDrawing() {\n  _resetDrawing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var users, promises;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return db.collection(\"history\").doc(new Date().getFullYear().toString())[\"delete\"]();\n\n          case 2:\n            _context.next = 4;\n            return db.collection(\"commands\").doc(\"commandCenter\").update({\n              state: \"not started\"\n            });\n\n          case 4:\n            _context.next = 6;\n            return db.collection(\"users\").get();\n\n          case 6:\n            users = _context.sent;\n            promises = [];\n            users.docs.forEach(function (doc) {\n              promises.push(doc.ref.update({\n                person: \"\",\n                personDesire: \"\",\n                personDislike: \"\"\n              }));\n            });\n            _context.next = 11;\n            return Promise.all(promises);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _resetDrawing.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}
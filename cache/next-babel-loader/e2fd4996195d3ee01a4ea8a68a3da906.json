{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { updateUserInfo, getUser } from \"../scripts/db\";\nimport { useRouter } from \"next/router\";\nexport default function UpdateProfile() {\n  var nameRef = useRef(null);\n  var desireRef = useRef(null);\n  var dislikeRef = useRef(null);\n\n  var _useState = useState(\"\"),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  var _useState3 = useState({\n    name: \"\",\n    desire: \"\",\n    email: \"\",\n    dislike: \"\",\n    personDesire: \"\",\n    personDislike: \"\"\n  }),\n      userData = _useState3[0],\n      setUserData = _useState3[1];\n\n  useEffect(function () {\n    if (currentUser) {\n      getUser(currentUser.uid).then(function (snap) {\n        setUserData(snap.data());\n      });\n    } else {\n      setUserData({\n        email: \"\",\n        desire: \"\",\n        personDesire: \"\",\n        dislike: \"\",\n        personDislike: \"\",\n        name: \"\",\n        userType: \"\",\n        person: \"\"\n      });\n    }\n  }, [currentUser]);\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _nameRef$current, _desireRef$current, _dislikeRef$current, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n\n              if (currentUser) {\n                _context.next = 5;\n                break;\n              }\n\n              setError(\"Failed to update info\");\n              return _context.abrupt(\"return\");\n\n            case 5:\n              setError(\"\");\n              setLoading(true);\n              data = {\n                name: (_nameRef$current = nameRef.current) === null || _nameRef$current === void 0 ? void 0 : _nameRef$current.value,\n                desire: (_desireRef$current = desireRef.current) === null || _desireRef$current === void 0 ? void 0 : _desireRef$current.value,\n                dislike: (_dislikeRef$current = dislikeRef.current) === null || _dislikeRef$current === void 0 ? void 0 : _dislikeRef$current.value\n              };\n              _context.next = 10;\n              return updateUserInfo(currentUser.uid, data);\n\n            case 10:\n              router.push(\"/\");\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              if (_context.t0 === \"\") setError(\"Failed to create an account\");\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsxs(Card.Body, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Update Info\"\n        }), error && /*#__PURE__*/_jsx(Alert, {\n          variant: \"danger\",\n          children: error\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Name\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: nameRef,\n              defaultValue: userData.name,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"want\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: desireRef,\n              defaultValue: userData.desire,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"dontwant\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you don't Want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: dislikeRef,\n              defaultValue: userData.dislike,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Update\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        children: \"Cancel\"\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
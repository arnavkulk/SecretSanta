{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { signup } from \"../scripts/auth\";\nimport { addUser } from \"../scripts/db\";\nimport { useRouter } from \"next/router\";\nexport default function Signup() {\n  const nameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const passwordConfirmRef = useRef(null);\n  const desireRef = useRef(null);\n  const dislikeRef = useRef(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n\n  async function handleSubmit(e) {\n    var _passwordRef$current, _passwordConfirmRef$c;\n\n    e.preventDefault();\n\n    if (((_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value) !== ((_passwordConfirmRef$c = passwordConfirmRef.current) === null || _passwordConfirmRef$c === void 0 ? void 0 : _passwordConfirmRef$c.value)) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      var _emailRef$current, _passwordRef$current2, _emailRef$current2, _nameRef$current, _desireRef$current, _dislikeRef$current;\n\n      setError(\"\");\n      setLoading(true);\n      const user = await signup((_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value, (_passwordRef$current2 = passwordRef.current) === null || _passwordRef$current2 === void 0 ? void 0 : _passwordRef$current2.value);\n\n      if (!user.user) {\n        setError(\"Failed to create an account\");\n        return;\n      }\n\n      const data = {\n        email: (_emailRef$current2 = emailRef.current) === null || _emailRef$current2 === void 0 ? void 0 : _emailRef$current2.value,\n        name: (_nameRef$current = nameRef.current) === null || _nameRef$current === void 0 ? void 0 : _nameRef$current.value,\n        desire: (_desireRef$current = desireRef.current) === null || _desireRef$current === void 0 ? void 0 : _desireRef$current.value,\n        dislike: (_dislikeRef$current = dislikeRef.current) === null || _dislikeRef$current === void 0 ? void 0 : _dislikeRef$current.value,\n        userType: \"user\",\n        personDesire: \"\",\n        personDislike: \"\",\n        person: \"\"\n      };\n      await addUser(user.user.uid, data);\n      router.push(\"/\");\n    } catch (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        setError(\"A user with this email already exists\");\n      } else if (error.code === \"auth/invalid-email\") {\n        setError(\"Invalid email\");\n      } else if (error.code === \"auth/weak-password\") {\n        setError(\"Password must be at least 6 characters\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setError(\"No user with this email\");\n      } else {\n        setError(\"Failed to create account\");\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsxs(Card.Body, {\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Sign Up\"\n        }), error && /*#__PURE__*/_jsx(Alert, {\n          variant: \"danger\",\n          children: error\n        }), /*#__PURE__*/_jsxs(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            id: \"name\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Name\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: nameRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Email\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Password\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Password Confirmation\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"want\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: desireRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            id: \"dontwant\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"What you don't Want\"\n            }), /*#__PURE__*/_jsx(Form.Control, {\n              type: \"text\",\n              ref: dislikeRef,\n              required: true\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsx(Link, {\n        href: \"/login\",\n        children: \"Log In\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}
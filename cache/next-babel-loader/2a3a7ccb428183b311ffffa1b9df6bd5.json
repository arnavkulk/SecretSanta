{"ast":null,"code":"import { db } from \"../firebase\";\nexport function addUser(id, info) {\n  return db.collection(\"users\").doc(id).set(info);\n}\nexport function updateUserInfo(id, info) {\n  return db.collection(\"users\").doc(id).update(info);\n}\nexport function getUser(id) {\n  return db.collection(\"users\").doc(id).get();\n}\nexport function addListener(path, onSnapshot) {\n  return db.doc(path).onSnapshot(onSnapshot);\n}\nexport function startDrawing() {\n  return db.collection(\"commands\").doc(\"commandCenter\").update({\n    state: \"started\"\n  });\n}\nexport async function resetDrawing() {\n  await db.collection(\"history\").doc(new Date().getFullYear().toString()).delete();\n  await db.collection(\"commands\").doc(\"commandCenter\").update({\n    state: \"not started\"\n  });\n  let users = await db.collection(\"users\").get();\n  let promises = [];\n  users.docs.forEach(doc => {\n    promises.push(doc.ref.update({\n      person: \"\",\n      personDesire: \"\",\n      personDislike: \"\"\n    }));\n  });\n  await Promise.all(promises);\n}","map":{"version":3,"sources":["/Users/arnav/git/SecretSanta/website-with-nextjs/src/scripts/db.ts"],"names":["db","addUser","id","info","collection","doc","set","updateUserInfo","update","getUser","get","addListener","path","onSnapshot","startDrawing","state","resetDrawing","Date","getFullYear","toString","delete","users","promises","docs","forEach","push","ref","person","personDesire","personDislike","Promise","all"],"mappings":"AAAA,SAASA,EAAT,QAAmB,aAAnB;AAcA,OAAO,SAASC,OAAT,CAAiBC,EAAjB,EAA6BC,IAA7B,EAAwD;AAC7D,SAAOH,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,EAA3B,EAA+BI,GAA/B,CAAmCH,IAAnC,CAAP;AACD;AAED,OAAO,SAASI,cAAT,CAAwBL,EAAxB,EAAoCC,IAApC,EAA+D;AACpE,SAAOH,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,EAA3B,EAA+BM,MAA/B,CAAsCL,IAAtC,CAAP;AACD;AAED,OAAO,SAASM,OAAT,CACLP,EADK,EAIL;AACA,SAAOF,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,EAA3B,EAA+BQ,GAA/B,EAAP;AACD;AAED,OAAO,SAASC,WAAT,CACLC,IADK,EAELC,UAFK,EAKO;AACZ,SAAOb,EAAE,CAACK,GAAH,CAAOO,IAAP,EAAaC,UAAb,CAAwBA,UAAxB,CAAP;AACD;AAED,OAAO,SAASC,YAAT,GAAuC;AAC5C,SAAOd,EAAE,CACNI,UADI,CACO,UADP,EAEJC,GAFI,CAEA,eAFA,EAGJG,MAHI,CAGG;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAHH,CAAP;AAID;AAED,OAAO,eAAeC,YAAf,GAA6C;AAClD,QAAMhB,EAAE,CACLI,UADG,CACQ,SADR,EAEHC,GAFG,CAEC,IAAIY,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB,EAFD,EAGHC,MAHG,EAAN;AAIA,QAAMpB,EAAE,CACLI,UADG,CACQ,UADR,EAEHC,GAFG,CAEC,eAFD,EAGHG,MAHG,CAGI;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAHJ,CAAN;AAIA,MAAIM,KAAK,GAAG,MAAMrB,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBM,GAAvB,EAAlB;AACA,MAAIY,QAA8B,GAAG,EAArC;AACAD,EAAAA,KAAK,CAACE,IAAN,CAAWC,OAAX,CAAoBnB,GAAD,IAAS;AAC1BiB,IAAAA,QAAQ,CAACG,IAAT,CACEpB,GAAG,CAACqB,GAAJ,CAAQlB,MAAR,CAAe;AAAEmB,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,YAAY,EAAE,EAA5B;AAAgCC,MAAAA,aAAa,EAAE;AAA/C,KAAf,CADF;AAGD,GAJD;AAKA,QAAMC,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAN;AACD","sourcesContent":["import { db } from \"../firebase\";\nimport firebase from \"firebase\";\n\nexport interface User {\n  email?: string;\n  desire?: string;\n  personDesire?: string;\n  dislike?: string;\n  personDislike?: string;\n  name?: string;\n  userType?: string;\n  person?: string;\n}\n\nexport function addUser(id: string, info: User): Promise<void> {\n  return db.collection(\"users\").doc(id).set(info);\n}\n\nexport function updateUserInfo(id: string, info: User): Promise<void> {\n  return db.collection(\"users\").doc(id).update(info);\n}\n\nexport function getUser(\n  id: string\n): Promise<\n  firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>\n> {\n  return db.collection(\"users\").doc(id).get();\n}\n\nexport function addListener(\n  path: string,\n  onSnapshot: (\n    snap: firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>\n  ) => void\n): () => void {\n  return db.doc(path).onSnapshot(onSnapshot);\n}\n\nexport function startDrawing(): Promise<void> {\n  return db\n    .collection(\"commands\")\n    .doc(\"commandCenter\")\n    .update({ state: \"started\" });\n}\n\nexport async function resetDrawing(): Promise<void> {\n  await db\n    .collection(\"history\")\n    .doc(new Date().getFullYear().toString())\n    .delete();\n  await db\n    .collection(\"commands\")\n    .doc(\"commandCenter\")\n    .update({ state: \"not started\" });\n  let users = await db.collection(\"users\").get();\n  let promises: Array<Promise<void>> = [];\n  users.docs.forEach((doc) => {\n    promises.push(\n      doc.ref.update({ person: \"\", personDesire: \"\", personDislike: \"\" })\n    );\n  });\n  await Promise.all(promises);\n}\n"]},"metadata":{},"sourceType":"module"}
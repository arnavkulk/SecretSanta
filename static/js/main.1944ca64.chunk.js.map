{"version":3,"sources":["firebase.ts","scripts/auth.ts","scripts/db.ts","components/Signup.tsx","contexts/AuthContext.tsx","components/Dashboard.tsx","components/Login.tsx","components/PrivateRoute.tsx","components/ForgotPassword.tsx","components/UpdateProfile.tsx","App.tsx","index.tsx"],"names":["dotenv","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","addUser","id","info","collection","doc","set","updateUserInfo","update","getUser","get","startDrawing","state","resetDrawing","a","users","promises","docs","forEach","push","ref","person","personDesire","personDislike","Promise","all","Signup","nameRef","useRef","emailRef","passwordRef","passwordConfirmRef","desireRef","dislikeRef","useState","error","setError","loading","setLoading","history","useHistory","e","preventDefault","current","value","user","data","name","desire","dislike","userType","uid","code","Card","Body","className","Alert","variant","Form","onSubmit","Group","Label","Control","type","required","Button","disabled","to","AuthContext","createContext","currentUser","useAuth","useContext","AuthProvider","children","setCurrentUser","useEffect","onAuthStateChanged","Provider","Dashboard","userData","setUserData","command","setCommand","handleLogout","then","path","onSnapshot","snap","onClick","CircularProgress","color","Login","console","log","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","defaultValue","App","Container","style","minHeight","maxWidth","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1944ca64.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\nimport * as dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nlet app = firebase.initializeApp(firebaseConfig);\n\nexport let auth = app.auth();\nexport let db = app.firestore();\n\nexport default app;\n","import { auth } from \"../firebase\";\nimport firebase from \"firebase\";\n\nexport function signup(email, password): Promise<firebase.auth.UserCredential> {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\nexport function login(email, password): Promise<firebase.auth.UserCredential> {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\nexport function logout(): Promise<void> {\n  return auth.signOut();\n}\n\nexport function resetPassword(email: string) {\n  return auth.sendPasswordResetEmail(email);\n}\n\nexport function updateEmail(currentUser: firebase.User, email: string) {\n  return currentUser.updateEmail(email);\n}\n\nexport function updatePassword(currentUser: firebase.User, password: string) {\n  return currentUser.updatePassword(password);\n}\n\nexport async function googleSignIn(): Promise<firebase.auth.UserCredential> {\n  let provider = new firebase.auth.GoogleAuthProvider();\n  return await auth.signInWithPopup(provider);\n}","import { db} from \"../firebase\";\nimport firebase from \"firebase\";\n\nexport interface User {\n  email?: string;\n  desire?: string;\n  personDesire?: string;\n  dislike?: string;\n  personDislike?: string;\n  name?: string;\n  userType?: string;\n  person?: string;\n}\n\nexport function addUser(id: string, info: User): Promise<void> {\n  return db.collection(\"users\").doc(id).set(info);\n}\n\nexport function updateUserInfo(id: string, info: User): Promise<void> {\n  return db.collection(\"users\").doc(id).update(info);\n}\n\nexport function getUser(\n  id: string\n): Promise<\n  firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>\n> {\n  return db.collection(\"users\").doc(id).get();\n}\n\nexport function addListener(\n  path: string,\n  onSnapshot: (\n    snap: firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>\n  ) => void\n): () => void {\n  return db.doc(path).onSnapshot(onSnapshot);\n}\n\nexport function startDrawing(): Promise<void> {\n  return db\n    .collection(\"commands\")\n    .doc(\"commandCenter\")\n    .update({ state: \"started\" });\n}\n\nexport async function resetDrawing(): Promise<void> {\n  await db\n    .collection(\"commands\")\n    .doc(\"commandCenter\")\n    .update({ state: \"not started\" });\n  let users = await db.collection(\"users\").get();\n  let promises: Array<Promise<void>> = [];\n  users.docs.forEach((doc) => {\n    promises.push(\n      doc.ref.update({ person: \"\", personDesire: \"\", personDislike: \"\" })\n    );\n  });\n  await Promise.all(promises);\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { signup } from \"../scripts/auth\";\nimport { addUser, User } from \"../scripts/db\";\nexport default function Signup() {\n  const nameRef = useRef<HTMLInputElement>(null);\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const passwordConfirmRef = useRef<HTMLInputElement>(null);\n  const desireRef = useRef<HTMLInputElement>(null);\n  const dislikeRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current?.value !== passwordConfirmRef.current?.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      const user = await signup(\n        emailRef.current?.value,\n        passwordRef.current?.value\n      );\n      if (!user.user) {\n        setError(\"Failed to create an account\");\n        return;\n      }\n      const data: User = {\n        email: emailRef.current?.value,\n        name: nameRef.current?.value,\n        desire: desireRef.current?.value,\n        dislike: dislikeRef.current?.value,\n        userType: \"user\",\n        personDesire: \"\",\n        personDislike: \"\",\n        person: \"\",\n      };\n      await addUser(user.user.uid, data);\n      history.push(\"/SecretSanta/\");\n    } catch (error) {\n      if(error.code === \"auth/email-already-in-use\") {\n        setError(\"A user with this email already exists\");\n      } else if(error.code === \"auth/invalid-email\") {\n        setError(\"Invalid email\");\n      } else if(error.code === \"auth/weak-password\") {\n        setError(\"Password must be at least 6 characters\");\n      } else if(error.code === \"auth/user-not-found\") {\n        setError(\"No user with this email\");\n      } else {\n        setError(\"Failed to create account\")\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" ref={nameRef} required />\n            </Form.Group>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Form.Group id=\"want\">\n              <Form.Label>What you want</Form.Label>\n              <Form.Control type=\"text\" ref={desireRef} required />\n            </Form.Group>\n            <Form.Group id=\"dontwant\">\n              <Form.Label>What you don't Want</Form.Label>\n              <Form.Control type=\"text\" ref={dislikeRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/SecretSanta/login\">Log In</Link>\n      </div>\n    </>\n  );\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport firebase from \"firebase\";\n\ninterface State {\n  currentUser: firebase.User | null;\n}\n\nconst AuthContext = createContext<State>({ currentUser: null });\n\nexport const useAuth = (): State => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  let value: State = {\n    currentUser,\n  };\n  return (\n    <AuthContext.Provider value={value}>\n      {\" \"}\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { logout } from \"../scripts/auth\";\nimport {\n  getUser,\n  User,\n  addListener,\n  startDrawing,\n  resetDrawing,\n} from \"../scripts/db\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\");\n  const [userData, setUserData] = useState<User>({\n    name: \"\",\n    desire: \"\",\n    email: \"\",\n    dislike: \"\",\n    personDesire: \"\",\n    personDislike: \"\",\n  });\n  const [command, setCommand] = useState<string>(\"not started\");\n  const { currentUser } = useAuth();\n  const history = useHistory();\n\n  if (currentUser === null) {\n    history.push(\"/SecretSanta/login\");\n  }\n  \n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/SecretSanta/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  useEffect(() => {\n    if (currentUser) {\n      getUser(currentUser.uid).then((user) => {\n        setUserData(user.data() as User);\n      });\n    }\n  }, [currentUser, userData]);\n\n  useEffect(() => {\n    addListener(\"commands/commandCenter\", (snap) => {\n      setCommand(snap.data()?.state);\n    });\n  }, [command]);\n\n  if (command === \"not started\") {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Profile</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <strong>Name:</strong> {userData.name}\n            <br></br>\n            <strong>Email:</strong> {userData.email}\n            <br></br>\n            <strong>Desires:</strong> {userData.desire}\n            <br></br>\n            <strong>Dislikes:</strong> {userData.dislike}\n            {userData.userType === \"admin\" && (\n              <>\n                <br></br>\n                <div className=\"w-100 text-center mt-2\">\n                  <Button\n                    className=\"w-100\"\n                    onClick={startDrawing}\n                    variant=\"primary\"\n                  >\n                    Start Drawing\n                  </Button>\n                </div>\n              </>\n            )}\n            <Link to=\"/SecretSanta/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n              Update Profile\n            </Link>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          <Button variant=\"link\" onClick={handleLogout}>\n            Log Out\n          </Button>\n        </div>\n      </>\n    );\n  } else if (command === \"started\") {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n            <div className=\"text-center mt-2\">\n              <CircularProgress color=\"secondary\" />\n            </div>\n            <div className=\"w-100 text-center mt-2\">\n              <h2>Pairing...</h2>\n              {userData.userType === \"admin\" && (\n                <>\n                  <br></br>\n                  <Button\n                    onClick={resetDrawing}\n                    variant=\"danger\"\n                    className=\"w-100\"\n                  >\n                    Cancel Drawing\n                  </Button>\n                </>\n              )}\n            </div>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Profile</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <strong>Name:</strong> {userData.name}\n            <br></br>\n            <strong>Email:</strong> {userData.email}\n            <br></br>\n            <strong>Desires:</strong> {userData.desire}\n            <br></br>\n            <strong>Dislikes:</strong> {userData.dislike}\n            <br></br>\n            <strong>Person:</strong> {userData.person}\n            <br></br>\n            <strong>Person Desire:</strong> {userData.personDesire}\n            <br></br>\n            <strong>Person Dislike:</strong> {userData.personDislike}\n            {userData.userType === \"admin\" && (\n              <>\n                <br></br>\n                <div className=\"w-100 text-center mt-2\">\n                  <Button\n                    onClick={resetDrawing}\n                    variant=\"danger\"\n                    className=\"w-100\"\n                  >\n                    Reset Drawing\n                  </Button>\n                </div>\n              </>\n            )}\n            <Link to=\"/SecretSanta/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n              Update Profile\n            </Link>\n          </Card.Body>\n        </Card>\n        <div className=\"w-100 text-center mt-2\">\n          <Button variant=\"link\" onClick={handleLogout}>\n            Log Out\n          </Button>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { login } from \"../scripts/auth\";\n\nexport default function Login() {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { currentUser } = useAuth();\n\n  if (currentUser !== null) {\n    history.push(\"/SecretSanta/\");\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current?.value, passwordRef.current?.value);\n      history.push(\"/SecretSanta/\");\n    } catch (error) {\n      console.log(error)\n      if(error.code === \"auth/email-already-exists\") {\n        setError(\"A user with this email already exists\");\n      } else if(error.code === \"auth/invalid-email\") {\n        setError(\"Invalid email\");\n      } else if(error.code === \"auth/wrong-password\") {\n        setError(\"Incorrect password\");\n      } else if(error.code === \"auth/user-not-found\") {\n        setError(\"No user with this email\");\n      } else {\n        setError(\"Failed to log in\")\n      }\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/SecretSanta/forgot-password\">Forgot Password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/SecretSanta/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/SecretSanta/login\" />\n      }}\n    ></Route>\n  )\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { resetPassword } from \"../scripts/auth\";\n\nconst ForgotPassword: React.FC = () => {\n  const emailRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [loading, setLoading] = useState<true | false>(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      if (emailRef.current) {\n        await resetPassword(emailRef.current.value);\n      }\n\n      setMessage(\"Check your inbox for further instructions\");\n    } catch {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/SecretSanta/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/SecretSanta/signup\">Sign Up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { updateUserInfo, User, getUser } from \"../scripts/db\";\n\nexport default function UpdateProfile() {\n  const nameRef = useRef<HTMLInputElement>(null);\n  const desireRef = useRef<HTMLInputElement>(null);\n  const dislikeRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { currentUser } = useAuth();\n  const [userData, setUserData] = useState<User>({\n    name: \"\",\n    desire: \"\",\n    email: \"\",\n    dislike: \"\",\n    personDesire: \"\",\n    personDislike: \"\",\n  });\n\n  useEffect(() => {\n    if (currentUser) {\n      getUser(currentUser.uid).then((user) => {\n        setUserData(user.data() as User);\n      });\n    }\n  }, [currentUser, userData]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      if (!currentUser) {\n        setError(\"Failed to update info\");\n        return;\n      }\n      setError(\"\");\n      setLoading(true);\n      const data: User = {\n        name: nameRef.current?.value,\n        desire: desireRef.current?.value,\n        dislike: dislikeRef.current?.value,\n      };\n      await updateUserInfo(currentUser.uid, data);\n      history.push(\"/SecretSanta/\");\n    } catch (error) {\n      if (error === \"\") setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Info</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={nameRef}\n                defaultValue={userData.name}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"want\">\n              <Form.Label>What you want</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={desireRef}\n                defaultValue={userData.desire}\n                required\n              />\n            </Form.Group>\n            <Form.Group id=\"dontwant\">\n              <Form.Label>What you don't Want</Form.Label>\n              <Form.Control\n                type=\"text\"\n                ref={dislikeRef}\n                defaultValue={userData.dislike}\n                required\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/SecretSanta/\">Cancel</Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\"\nimport Signup from \"./components/Signup\"\nimport { Container } from \"react-bootstrap\"\nimport { AuthProvider } from \"./contexts/AuthContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Dashboard from \"./components/Dashboard\"\nimport Login from \"./components/Login\"\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport ForgotPassword from \"./components/ForgotPassword\"\nimport UpdateProfile from \"./components/UpdateProfile\"\n\nfunction App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/SecretSanta/\" component={Dashboard} />\n              <PrivateRoute path=\"/SecretSanta/update-profile\" component={UpdateProfile} />\n              <Route path=\"/SecretSanta/signup\" component={Signup} />\n              <Route path=\"/SecretSanta/login\" component={Login} />\n              <Route path=\"/SecretSanta/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  )\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
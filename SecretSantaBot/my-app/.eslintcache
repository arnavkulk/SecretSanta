[{"/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/index.js":"1","/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/App.js":"2","/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/reportWebVitals.js":"3","/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/components/Login.js":"4","/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/firebase.js":"5"},{"size":500,"mtime":1607625853691,"results":"6","hashOfConfig":"7"},{"size":209,"mtime":1607625849425,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607622330363,"results":"9","hashOfConfig":"7"},{"size":9823,"mtime":1607632546233,"results":"10","hashOfConfig":"7"},{"size":584,"mtime":1607623018887,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"crekz0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/index.js",[],["25","26"],"/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/App.js",[],"/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/reportWebVitals.js",[],"/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/components/Login.js",["27","28","29","30","31","32","33","34"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport firebase from \"../firebase.js\";\nimport { Container, Row, Col, Nav, Tab } from \"react-bootstrap\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nexport default class SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      authed: false,\n      desire: \"\",\n      creating: false,\n      drawState: \"\",\n      name: \"\",\n      userData: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let ref = this;\n    let db = firebase.firestore();\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(\"hihihi\", user.uid);\n        let data = null;\n        let docRef = db.collection(\"users\").doc(user.uid);\n        Promise.all([\n          docRef.get().then(function (doc) {\n            if (doc.exists) {\n              data = doc.data();\n              console.log(\"THE USER\", user);\n            }\n          }),\n        ]).then(() => {\n          ref.setState({ authed: true });\n          ref.setState({ userData: data });\n        });\n      }\n    });\n\n    db.collection(\"commands\")\n      .doc(\"commandCenter\")\n      .onSnapshot(function (doc) {\n        ref.setState({ drawState: doc.data()[\"state\"] });\n      });\n  }\n\n  createUser = () => {\n    this.setState({ creating: true });\n    let db = firebase.firestore();\n    let ref = this;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then((user) => {\n        db.collection(\"users\")\n          .doc(user.uid)\n          .set({\n            desire: this.state.desire,\n            name: this.state.name,\n            person: \"\",\n            personDesire: \"\",\n          })\n          .then(function () {\n            ref.setState({ creating: false });\n          })\n          .catch(function (error) {\n            console.error(\"Error writing document: \", error);\n          });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // ..\n      });\n  };\n\n  login = () => {\n    this.setState({ creating: true });\n    let ref = this;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then((user) => {\n        ref.setState({ creating: false });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n      });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    if (!this.state.authed || this.state.creating) {\n      return (\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          style={{ marginTop: \"200px\" }}\n        >\n          <CssBaseline />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Poo Poo Secret Santa\n            </Typography>\n            <Tab.Container\n              id=\"left-tabs-example\"\n              defaultActiveKey=\"first\"\n              style={{ marginTop: \"25px\" }}\n            >\n              <Row style={{ marginTop: \"35px\" }}>\n                <Col sm={3}>\n                  <Nav variant=\"pills\" className=\"flex-column\">\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"first\">Create Account</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"second\">Log In</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </Col>\n                <Col sm={9}>\n                  <Tab.Content>\n                    <Tab.Pane eventKey=\"first\">\n                      <form noValidate>\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"name\"\n                          label=\"Name\"\n                          name=\"name\"\n                          autoComplete=\"name\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"password\"\n                          label=\"Password (10+ chars)\"\n                          type=\"password\"\n                          id=\"password\"\n                          autoComplete=\"current-password\"\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"desire\"\n                          label=\"What You Want/ Do Not Want\"\n                          name=\"desire\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n\n                        <Row style={{ marginTop: \"25px\" }}>\n                          <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.createUser}\n                          >\n                            {this.state.creating\n                              ? \"Creating\"\n                              : \"Create Account\"}\n                          </Button>\n                        </Row>\n                      </form>\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"second\">\n                      <form noValidate>\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                          autoFocus\n                          onChange={this.handleChange}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          required\n                          fullWidth\n                          name=\"password\"\n                          label=\"Password\"\n                          type=\"password\"\n                          id=\"password\"\n                          autoComplete=\"current-password\"\n                          onChange={this.handleChange}\n                        />\n\n                        <Row style={{ marginTop: \"25px\" }}>\n                          <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.login}\n                          >\n                            {this.state.creating ? \"Logging In\" : \"Log In\"}\n                          </Button>\n                        </Row>\n                      </form>\n                    </Tab.Pane>\n                  </Tab.Content>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </div>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Container>\n      );\n    } else {\n      return (\n        <Container\n          className=\"justify-content-center\"\n          style={{\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            marginTop: \"200px\",\n          }}\n        >\n          <CircularProgress color=\"secondary\" />\n          {this.state.drawState == \"wait\" && (\n            <h2>The drawing has not started.</h2>\n          )}\n          {this.state.drawState == \"started\" && (\n            <h2>Drawing has started. Wait.</h2>\n          )}\n          {this.state.drawState == \"release\" && (\n            <>\n              <h2>Here's who you got. Sucks to suck.</h2>\n              <h8>Person : {this.state.userData.person}</h8>\n              <h8>Person : {this.state.userData.personDesire}</h8>\n            </>\n          )}\n        </Container>\n      );\n    }\n  }\n}\n","/Users/arnuvtandon/Documents/GitHub/SecretSanta/my-app/src/firebase.js",["35"],"import firebase from \"firebase\";\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDYdwZc1XvhmTedGOB2ALV1D6HjzqeQfrw\",\n  authDomain: \"secrets-91dd7.firebaseapp.com\",\n  projectId: \"secrets-91dd7\",\n  storageBucket: \"secrets-91dd7.appspot.com\",\n  messagingSenderId: \"200284184264\",\n  appId: \"1:200284184264:web:8ef308bb269c0f86850ffd\",\n  measurementId: \"G-E2E3V7T4FJ\",\n};\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDYdwZc1XvhmTedGOB2ALV1D6HjzqeQfrw\",\n  authDomain: \"secrets-91dd7.firebaseapp.com\",\n  projectId: \"secrets-91dd7\",\n});\nexport default firebase;\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":96,"column":13,"nodeType":"42","messageId":"43","endLine":96,"endColumn":22},{"ruleId":"40","severity":1,"message":"45","line":97,"column":13,"nodeType":"42","messageId":"43","endLine":97,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":112,"column":13,"nodeType":"42","messageId":"43","endLine":112,"endColumn":22},{"ruleId":"40","severity":1,"message":"45","line":113,"column":13,"nodeType":"42","messageId":"43","endLine":113,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":286,"column":33,"nodeType":"48","messageId":"49","endLine":286,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":289,"column":33,"nodeType":"48","messageId":"49","endLine":289,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":292,"column":33,"nodeType":"48","messageId":"49","endLine":292,"endColumn":35},{"ruleId":"40","severity":1,"message":"50","line":3,"column":5,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'firebaseConfig' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
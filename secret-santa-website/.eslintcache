[{"/Users/arnav/git/SecretSanta/secret-santa-website/src/App.tsx":"1","/Users/arnav/git/SecretSanta/secret-santa-website/src/firebase.ts":"2","/Users/arnav/git/SecretSanta/secret-santa-website/src/index.tsx":"3","/Users/arnav/git/SecretSanta/secret-santa-website/src/components/Login.tsx":"4","/Users/arnav/git/SecretSanta/secret-santa-website/src/contexts/DBContext.tsx":"5","/Users/arnav/git/SecretSanta/secret-santa-website/src/components/Signup.tsx":"6","/Users/arnav/git/SecretSanta/secret-santa-website/src/components/ForgotPassword.tsx":"7","/Users/arnav/git/SecretSanta/secret-santa-website/src/components/PrivateRoute.tsx":"8","/Users/arnav/git/SecretSanta/secret-santa-website/src/components/Dashboard.tsx":"9"},{"size":1225,"mtime":1608179491486,"results":"10","hashOfConfig":"11"},{"size":719,"mtime":1608166044401,"results":"12","hashOfConfig":"11"},{"size":243,"mtime":1608179549949,"results":"13","hashOfConfig":"11"},{"size":1773,"mtime":1608178395717,"results":"14","hashOfConfig":"11"},{"size":1457,"mtime":1608166534713,"results":"15","hashOfConfig":"11"},{"size":2047,"mtime":1608179369977,"results":"16","hashOfConfig":"11"},{"size":1685,"mtime":1608179472429,"results":"17","hashOfConfig":"11"},{"size":411,"mtime":1608179127149,"results":"18","hashOfConfig":"11"},{"size":1102,"mtime":1608178372819,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16xzim6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arnav/git/SecretSanta/secret-santa-website/src/App.tsx",[],["40","41"],"/Users/arnav/git/SecretSanta/secret-santa-website/src/firebase.ts",[],"/Users/arnav/git/SecretSanta/secret-santa-website/src/index.tsx",[],"/Users/arnav/git/SecretSanta/secret-santa-website/src/components/Login.tsx",["42"],"/Users/arnav/git/SecretSanta/secret-santa-website/src/contexts/DBContext.tsx",[],"/Users/arnav/git/SecretSanta/secret-santa-website/src/components/Signup.tsx",["43"],"import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { signup } from \"../scripts/auth\";\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  );\n}\n","/Users/arnav/git/SecretSanta/secret-santa-website/src/components/ForgotPassword.tsx",[],"/Users/arnav/git/SecretSanta/secret-santa-website/src/components/PrivateRoute.tsx",[],"/Users/arnav/git/SecretSanta/secret-santa-website/src/components/Dashboard.tsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":17},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'useAuth' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]